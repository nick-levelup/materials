// Функция eval(code) позволяет выполнить код, переданный ей в виде строки.

/* ======== */
eval('alert(1)');
/* ======== */

new Function('a,b', '..тело..')
/*
создает функцию с указанными аргументами a,b и телом.
*/

/* ======== */
var a = 2;

// вместо обращения к локальной переменной через eval
// будем принимать ее как аргумент функции
var f = new Function('x', 'alert(x)');

f(a); // 2
/* ======== */

/*
    Функция eval(str) выполняет код и возвращает последнее вычисленное
    выражение. В современном JavaScript она используется редко.

    Она выполняется в текущей области видимости, поэтому может получать
    и изменять локальные переменные. Этого следует избегать.
    Если выполняемый код всё же должен взаимодействовать с локальными
    переменными — используйте new Function.
    Создавайте функцию из строки и передавайте переменные ей,
    получайте результат явным образом.

    Есть трюки для выполнения eval в глобальной области видимости.
    Но лучше, все же, использовать new Function.
*/